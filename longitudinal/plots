# 04_posthoc_diagnostics_plots.R

library(emmeans)
library(DHARMa)
library(ggplot2)

# Load fitted model and data
model_fit <- readRDS("model_fit.rds")
fit_beta <- model_fit$fit_beta
data_clean <- model_fit$data_clean

# --- Post-hoc tests for POS ---
if("POS" %in% colnames(data_clean)) {
  tryCatch({
    emm_pos <- emmeans(fit_beta, ~ POS, type = "response")
    print(summary(emm_pos))
    pairwise_pos <- pairs(emm_pos, adjust = "tukey")
    print(summary(pairwise_pos))
  }, error = function(e){
    cat("Post-hoc test error:", conditionMessage(e), "\n")
  })
}

# --- Residual diagnostics ---
if(requireNamespace("DHARMa", quietly = TRUE)){
  sim_res <- simulateResiduals(fit_beta, n = 250)
  plot(sim_res)
  print(testResiduals(sim_res))
}

# --- Random intercepts plot ---
ranef_vals <- ranef(fit_beta)$cond$Player
ggplot(data.frame(intercept = ranef_vals[,1]), aes(x = intercept)) +
  geom_histogram(bins = 30, fill = "steelblue", alpha = 0.7, color = "white") +
  geom_density(aes(y = ..density.. * 30 * 0.05), color = "red", size = 1) +
  labs(x = "Random Intercept (Player-level)", y = "Frequency",
       title = "Distribution of Player Random Intercepts") +
  theme_minimal()

# --- Predicted vs actual plot ---
pred_plot_data <- data.frame(
  Actual = data_clean$PER_beta,
  Predicted = data_clean$predicted_PER_beta
)
ggplot(pred_plot_data, aes(x = Actual, y = Predicted)) +
  geom_point(alpha = 0.3, color = "steelblue") +
  geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed", size = 1) +
  geom_smooth(method = "lm", se = TRUE, color = "black") +
  labs(x = "Actual PER (Beta-adjusted)", y = "Predicted PER",
       title = "Predicted vs Actual PER") +
  theme_minimal()
