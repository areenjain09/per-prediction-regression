# ========================
# Train/Test Evaluation
# ========================

library(caret)
source("data_preprocessing.R")
source("model_fit.R")

set.seed(123)
idx <- createDataPartition(data$PER_normalized_adj, p=0.9, list=FALSE)
train_data <- data[idx, ]
test_data  <- data[-idx, ]

# Ensure POS factor levels match
if ("POS" %in% names(train_data)) {
  train_data$POS <- factor(train_data$POS)
  test_data$POS  <- factor(test_data$POS, levels = levels(train_data$POS))
}

# Predictions
y_te  <- test_data$PER_normalized_adj
y_hat <- predict(fit_big, newdata=test_data, type="response")

# Evaluation metrics
rmse <- sqrt(mean((y_te - y_hat)^2))
mae  <- mean(abs(y_te - y_hat))
r2_test <- 1 - sum((y_te - y_hat)^2)/sum((y_te - mean(y_te))^2)

cat(sprintf("TEST: RMSE=%.4f | MAE=%.4f | R2-like=%.3f | n_test=%d\n",
            rmse, mae, r2_test, nrow(test_data)))

# LaTeX table update for test set
perf_df <- rbind(perf_df, data.frame(
  Metric = c("Observations (test)","RMSE (test)","MAE (test)","R2-like (test)"),
  Value = c(as.character(nrow(test_data)), sprintf("%.4f", rmse), sprintf("%.4f", mae), sprintf("%.3f", r2_test)),
  stringsAsFactors = FALSE
))
cat("\n---- START LATEX (Full Performance) ----\n")
cat(print(xtable(perf_df, caption="Beta Regression: Full Performance Metrics",
                 label="tab:beta_perf_full"), type="latex", booktabs=TRUE, include.rownames=FALSE,
          caption.placement="top", sanitize.text.function=identity))
cat("\n---- END LATEX ----\n")
