# ========================
# Fit Beta Regression
# ========================

library(betareg)
library(xtable)
source("data_preprocessing.R")

# Build formula
form_safe <- as.formula(paste("PER_normalized_adj ~", paste(found, collapse = " + ")))
fit_big <- betareg(form_safe, data = data, link = "logit", link.phi = "log", control = betareg.control(maxit=1000))
sum_fit <- summary(fit_big)
print(sum_fit)

# Extract training metrics
ll  <- as.numeric(logLik(fit_big))
k   <- attr(logLik(fit_big), "df")
n_o <- nobs(fit_big)
aic <- AIC(fit_big)
bic <- BIC(fit_big)
aicc <- if (n_o - k - 1 > 0) aic + (2 * k * (k + 1)) / (n_o - k - 1) else NA_real_
pseudo_r2 <- sum_fit$pseudo.r.squared
phi <- unname(coef(fit_big, model = "precision"))
dispersion_alt <- 1 / phi

cat(sprintf("\nTRAIN: logLik=%.1f | AIC=%.1f | AICc=%s | BIC=%.1f | pseudoR2=%.3f | phi=%.2f | 1/phi=%.3f | n=%d\n",
            ll, aic, ifelse(is.na(aicc), "NA", sprintf("%.1f", aicc)),
            bic, pseudo_r2, phi, dispersion_alt, n_o))

# LaTeX table for performance
perf_df <- data.frame(
  Metric = c("Log-Likelihood (train)","AIC (train)","AICc (train)","BIC (train)",
             "Pseudo R-squared (train)","Precision (phi, train)","Dispersion (1/phi, train)",
             "Observations (train)"),
  Value = c(sprintf("%.1f", ll), sprintf("%.1f", aic),
            ifelse(is.na(aicc), "NA", sprintf("%.1f", aicc)),
            sprintf("%.1f", bic), sprintf("%.3f", pseudo_r2),
            sprintf("%.2f", phi), sprintf("%.3f", dispersion_alt),
            as.character(n_o)),
  stringsAsFactors = FALSE
)
cat("\n---- START LATEX (Performance) ----\n")
cat(print(xtable(perf_df, caption="Beta Regression: Model Fit Metrics",
                 label="tab:beta_perf"), type="latex", booktabs=TRUE, include.rownames=FALSE,
          caption.placement="top", sanitize.text.function=identity))
cat("\n---- END LATEX ----\n")
